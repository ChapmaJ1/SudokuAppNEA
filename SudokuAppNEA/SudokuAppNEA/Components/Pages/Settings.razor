@page "/settings"
@inject NavigationManager NavigationManager
@inject UserClient UserClient

<h1>Settings + Personal Statistics</h1>

<div class="form-container">
    <button class="btn-primary" @onclick=ChangeMistakeDetection>Mistake Detection: @_mistakeDetection</button>
    <button class="btn-primary" @onclick=ChangeScoreSaving>Save Scores To Leaderboard: @_saveScores</button>
</div>

<div class="stats-container">
    <h2>Average Mistakes: @_stats![0]</h2>
    <h2>Average Score: @_stats![1]</h2>
    <h2>Average Time: @_stats![2]</h2>
    <button class="btn-primary" @onclick=SaveSettings>Save And Return To Menu</button>
</div>

@code {
    private List<string>? _stats;
    private string? _mistakeDetection;
    private string? _saveScores;
    private DBCaller? _databaseCaller = new DBCaller();

    protected override void OnInitialized()
    {
        _mistakeDetection = UserClient.MistakeDetection;
        _saveScores = UserClient.SaveScores;
        GetUserStats();  // fetches user _stats
        if (_stats!.Count == 0)  // if user has no previously played boards
        {
            _stats = new List<string>() { "N/A", "N/A", "N/A" };
        }
    }

    private void ChangeMistakeDetection() // changes frontend display for mistake detection
    {
        if (_mistakeDetection == "On")
        {
            _mistakeDetection = "Off";
        }
        else
        {
            _mistakeDetection = "On";
        }
    }

    private void ChangeScoreSaving() // changes frontend display for score saving
    {
        if (_saveScores == "On")
        {
            _saveScores = "Off";
        }
        else
        {
            _saveScores = "On";
        }
    }

    private void SaveSettings()
    {
        _databaseCaller!.SaveUserSettings(_mistakeDetection!, _saveScores!, UserClient.User!.Id);  // updates user settings according to their final choices
        NavigationManager.NavigateTo("/menu");  // takes user back to menu
    }

    private void GetUserStats()
    {
        _stats = _databaseCaller!.GetUserStats(UserClient.User!.Id);
    }
}
